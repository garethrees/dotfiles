#!/usr/bin/env ruby
# Heavily based on http://leahneukirchen.org/repos/blogcode/mess.rb
require 'fileutils'
require 'date'

def check_symlink!(link)
  if File.exist?(link) && !File.symlink?(link)
    warn "`#{link}' is not a symlink, something is wrong."
  end
end

exit_code = 1

# Set the static dir
DOC_DIR = File.expand_path(File.join(ENV['HOME'], 'doc')).freeze

# Built a path for "last month's" dir
previous_dir = File.join(DOC_DIR, DateTime.now.prev_month.strftime('%Y-%m'))

# Build the full path the symlink
previous_link = File.join(DOC_DIR, 'previous')

# Create a directory for last month
FileUtils.mkdir_p(previous_dir) unless File.directory?(previous_dir)

# Error out if previous_link isn't actually a symlink
check_symlink!(previous_link)

# Update previous_link to the current last month if we need to
if File.readlink(previous_link) != File.expand_path(previous_dir)
  FileUtils.rm_f(previous_link)
  FileUtils.ln_s(previous_dir, previous_link)
  exit_code = 0
end

# exit_code = 0 # TESTING: Always run
exit exit_code
