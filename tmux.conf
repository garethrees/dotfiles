###########################
#  Configuration
###########################

# improve colors
set -g default-terminal "screen-256color"

# increase scroll-back history
set -g history-limit 1000000

# Allow mouse mode
set-option -g mouse on

# use vim key bindings
setw -g mode-keys vi

# start window numbers at 1 to match keyboard order with tmux window order
set -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# Copy-paste integration
set-option -g default-command "reattach-to-user-namespace -l bash"

###########################
#  Key Bindings
###########################
#
# Force a reload of the config file.
bind C-r source-file ~/.tmux.conf \; display-message "source-file done"

# No delay for escape key press
set -sg escape-time 0

# Set prefix:  act like GNU screen
#unbind C-b
#set -g prefix C-a

# map Vi movement keys as pane movement keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Resize panes using PREFIX SHIFT + [H, J, K, L]
bind H resize-pane -L 20
bind J resize-pane -D 10
bind K resize-pane -U 10
bind L resize-pane -R 20

# Resize panes by a tiny amount using PREFIX META + [h, j, k, l]
bind M-j resize-pane -D
bind M-k resize-pane -U
bind M-h resize-pane -L
bind M-l resize-pane -R

# switch to last pane
bind C-a last-pane
#bind C-a last-window

# Clear the window
bind -r C-k send-keys -R \; clear-history \; send-keys "Enter"

# Toggle synchronize-panes
bind C-s setw 'synchronize-panes'

# Go to beginning of line
bind a send-prefix

# use current directory when splitting
# use PREFIX | to split window horizontally and PREFIX - to split vertically
bind '"' split-window    -c "#{pane_current_path}"
bind %   split-window -h -c "#{pane_current_path}"
bind -   split-window    -c "#{pane_current_path}"
bind |   split-window -h -c "#{pane_current_path}"

# Allow key repeat when scrolling through windows
bind-key -r n next-window
bind-key -r p previous-window

# Setup 'v' to begin selection as in Vim
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Open a gitsh pane; closes pane when gitsh is exited
bind g split-window -h -p 50 -c "#{pane_current_path}" gitsh

###########################
#  Status Bar
###########################

# left-align the status bar
set -g status-justify left

# remove administrative debris (session name, hostname, time) in status bar
set -g status-left ''

# Show the session name at the right of the status bar
set -g status-right '[#S]'

###########################
# Colors
###########################

# soften status bar colour from harsh green to light grey
set -g status-bg '#3e4e4e'
set -g status-fg '#aaaaaa'

# highlight current window
set-window-option -g window-status-current-fg black
set-window-option -g window-status-current-bg green

# Add a warning that the pane is synchronized
set-option -ag status-right '#{?pane_synchronized, #[bg=red]#[fg=black]PANE_SYNCHRONIZED#[default],}'
